apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.jetbrains.dokka'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation project(":domain")

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    //room
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    //paging
    implementation "androidx.paging:paging-runtime:$paging_version"


    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_gson_version"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_logging_version"


    // testing
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"
    androidTestImplementation "androidx.test.ext:junit:$androidx_test_ext_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$expresso_version"
    testImplementation "org.amshove.kluent:kluent:$kluent_version"
    // mocks
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$couroutine_test_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"
    testImplementation "app.cash.turbine:turbine:$turbine_version"
    testImplementation "androidx.arch.core:core-testing:$arch_version"
    testImplementation "androidx.test:core:$androidx_test_version"
    testImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation "androidx.arch.core:core-testing:$arch_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"
    testImplementation "org.robolectric:robolectric:$robolectric"

}


dokka {
    outputFormat = 'gfm'
    outputDirectory = "$rootProject.buildDir/dokka"
    configuration {
        includeNonPublic = true
    }
}